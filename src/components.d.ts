/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';

import { TodoList as TodoList } from './components/todo-list/todo-list';

interface HTMLTodoListElement extends TodoList, HTMLElement {
}
declare var HTMLTodoListElement: {
  prototype: HTMLTodoListElement;
  new (): HTMLTodoListElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "todo-list": HTMLTodoListElement;
  }
  interface ElementTagNameMap {
      "todo-list": HTMLTodoListElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "todo-list": JSXElements.TodoListAttributes;
      }
  }
  namespace JSXElements {
      export interface TodoListAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          todos?: any,
          allCompleted?: boolean
      }
  }
}

import { TodoMvc as TodoMvc } from './components/todo-mvc/todo-mvc';

interface HTMLTodoMvcElement extends TodoMvc, HTMLElement {
}
declare var HTMLTodoMvcElement: {
  prototype: HTMLTodoMvcElement;
  new (): HTMLTodoMvcElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "todo-mvc": HTMLTodoMvcElement;
  }
  interface ElementTagNameMap {
      "todo-mvc": HTMLTodoMvcElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "todo-mvc": JSXElements.TodoMvcAttributes;
      }
  }
  namespace JSXElements {
      export interface TodoMvcAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
      }
  }
}

import { TodoView as TodoView } from './components/todo-view/todo-view';

interface HTMLTodoViewElement extends TodoView, HTMLElement {
}
declare var HTMLTodoViewElement: {
  prototype: HTMLTodoViewElement;
  new (): HTMLTodoViewElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "todo-view": HTMLTodoViewElement;
  }
  interface ElementTagNameMap {
      "todo-view": HTMLTodoViewElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "todo-view": JSXElements.TodoViewAttributes;
      }
  }
  namespace JSXElements {
      export interface TodoViewAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          todo?: any
      }
  }
}

